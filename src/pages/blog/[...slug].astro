---
import { type CollectionEntry, getCollection } from 'astro:content';
import Navigation from '../../components/Navigation.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <Navigation />
  
  <main class="container mx-auto max-w-4xl px-4 sm:px-6 lg:px-8 py-12">
    <article class="prose prose-lg dark:prose-invert mx-auto">
      <div class="mb-8 text-center">
        <h1 class="mb-4">{post.data.title}</h1>
        <div class="flex items-center justify-center gap-4 text-gray-500 dark:text-gray-400">
          <time>
            {new Date(post.data.pubDate).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })}
          </time>
          {post.data.updatedDate && (
            <>
              <span>â€¢</span>
              <span>
                Updated: {new Date(post.data.updatedDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'short',
                  day: 'numeric',
                })}
              </span>
            </>
          )}
        </div>
        {post.data.tags.length > 0 && (
          <div class="flex flex-wrap justify-center gap-2 mt-4">
            {post.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 text-sm rounded-full">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </div>
      
      {post.data.heroImage && (
        <img 
          src={post.data.heroImage} 
          alt={post.data.title}
          class="w-full rounded-lg mb-8"
        />
      )}
      
      <div class="prose prose-lg dark:prose-invert max-w-none">
        <Content />
      </div>
    </article>
    
    <div class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
      <a 
        href="/" 
        class="inline-flex items-center gap-2 text-blue-600 dark:text-blue-400 hover:underline"
      >
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to blog
      </a>
    </div>
  </main>
</BaseLayout>